class is SpriteEntity imports cape imports cave imports motion :

var scene as GameScene
var starSprite as TextureSprite
var height as double
var width as double
var star as int
var audioManager as AudioManager
var clip as AudioClip
var y as double
var speed as double

func createSprite override as Sprite
{
	scene = getScene() as GameScene
	height = scene.getReferenceHeight()
	width = scene.getReferenceWidth()
	var random = new Random()
	star = random.nextInt(1,14)
	speed = 0.3
	audioManager = AudioManager.forApplication(scene.getContext())
	if(audioManager != null) {
		clip = audioManager.getClipForResource("coin")
	}
	if(star >= 1 && star <= 5) {
		starSprite = scene.addTextureSpriteForSize(scene.createTextureForImageResource("yellowstar"), 0.07 * width, 0.09 * height)
	}
	else if(star >= 6 && star <=9) {
		starSprite = scene.addTextureSpriteForSize(scene.createTextureForImageResource("pinkstar"), 0.07 * width, 0.09 * height)
	}
	else if(star >= 10 && star <=12) {
		starSprite = scene.addTextureSpriteForSize(scene.createTextureForImageResource("mintstar"), 0.07 * width, 0.09 * height)
	}
	else if(star = 13) {
		starSprite = scene.addTextureSpriteForSize(scene.createTextureForImageResource("purplestar"), 0.07 * width, 0.09 * height)
	}
	y = height * random.nextDouble()
	starSprite.move(width - starSprite.getWidth(), 0.6 * height -starSprite.getHeight())
	return starSprite
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	starSprite.move(starSprite.getX() - delta * speed , starSprite.getY())
	scene.addScore()
	if(sprite.getX() < scene.getPony().getX() + scene.getPony().getWidth() && scene.getPony().getX() < sprite.getWidth() + sprite.getX() && sprite.getY() < scene.getPony().getY() + scene.getPony().getHeight() && scene.getPony().getY() < sprite.getY() + sprite.getHeight()){
		scene.removeSprite(starSprite)
		onTimeToPlaySoundClip()
	}
}

func onTimeToPlaySoundClip
{
	if(clip != null) {
		clip.play()
	}
}

func cleanup override
{
	scene.removeAllSprites()
}
